[{"C:\\Users\\user\\Desktop\\ToDo\\my-app\\src\\index.js":"1","C:\\Users\\user\\Desktop\\ToDo\\my-app\\src\\App.js":"2","C:\\Users\\user\\Desktop\\ToDo\\my-app\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Desktop\\ToDo\\my-app\\src\\ToDo.js":"4","C:\\Users\\user\\Desktop\\ToDo\\my-app\\src\\idGenerator.js":"5","C:\\Users\\user\\Desktop\\ToDo\\my-app\\src\\Task.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":161,"mtime":1607190534968,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":4738,"mtime":1607197982831,"results":"11","hashOfConfig":"8"},{"size":78,"mtime":1607018190188,"results":"12","hashOfConfig":"8"},{"size":1284,"mtime":1607362675623,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"fgvtq4",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\Desktop\\ToDo\\my-app\\src\\index.js",[],["29","30"],"C:\\Users\\user\\Desktop\\ToDo\\my-app\\src\\App.js",[],"C:\\Users\\user\\Desktop\\ToDo\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\ToDo\\my-app\\src\\ToDo.js",["31","32","33"],"import React, { Component } from 'react'\r\nimport Task from './Task'\r\nimport { Container, Col, Row, InputGroup, FormControl, Button, Card } from 'react-bootstrap'\r\nimport idGenerator from './idGenerator'\r\n\r\nclass ToDo extends Component {\r\n    state = {\r\n        tasks: [],\r\n        inputValue: '',\r\n        selectedTasks: new Set()\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            inputValue: event.target.value\r\n        })\r\n    }\r\n\r\n    handleCheck = (id) => {\r\n        const selectedTasks = new Set(this.state.selectedTasks)\r\n\r\n        if (selectedTasks.has(id)) {\r\n            selectedTasks.delete(id)\r\n        } else {\r\n            selectedTasks.add(id)\r\n        }\r\n\r\n        this.setState({\r\n            selectedTasks\r\n        })\r\n    }\r\n\r\n    handleMultipleDelete = () => {\r\n        let tasks = [...this.state.tasks]\r\n        this.state.selectedTasks.forEach((id) => {\r\n            tasks = tasks.filter((task) => task._id !== id)\r\n        })\r\n\r\n        this.setState({\r\n            tasks: tasks,\r\n            selectedTasks: new Set()\r\n        })\r\n    }\r\n\r\n    addTask = () => {\r\n        const { inputValue } = this.state;\r\n        if (!inputValue) {\r\n            return;\r\n        }\r\n        const todoItem = {\r\n            text: inputValue,\r\n            _id: idGenerator()\r\n        }\r\n        const newTasks = [todoItem, ...this.state.tasks]\r\n\r\n        this.setState({\r\n            tasks: newTasks,\r\n            inputValue: '',\r\n        })\r\n    }\r\n\r\n    handleDelete = (id) => {\r\n        console.log(id)\r\n        const newArr = this.state.tasks.filter((el) => el._id !== id)\r\n\r\n        this.setState({\r\n            tasks: newArr\r\n        })\r\n    }\r\n\r\n    handleKeyDown = (event) => {\r\n        if (event.key === 'Enter') {\r\n            this.addTask()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <Container className='mt-4'>\r\n                    <Row>\r\n                        <Col>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <FormControl\r\n                                    placeholder='Add task here'\r\n                                    value={this.state.inputValue}\r\n                                    onChange={this.handleChange}\r\n                                    onKeyDown={(event) => this.handleKeyDown(event)}\r\n                                />\r\n                                <InputGroup.Append>\r\n                                    <Button\r\n                                        variant=\"outline-secondary\"\r\n                                        onClick={this.addTask} disabled={!this.state.inputValue}\r\n                                    >\r\n                                        Add\r\n                                    </Button>\r\n                                </InputGroup.Append>\r\n                            </InputGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='justify-content-center'>\r\n                        <Button\r\n                            onClick={this.handleMultipleDelete}\r\n                            disabled={this.state.selectedTasks.size === 0 ? true : false}\r\n                            variant='danger'\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n                    </Row>\r\n                </Container>\r\n                <Row className='justify-content-center'>\r\n                    {\r\n                        this.state.tasks.map((task, i) => {\r\n                            return <Task data={task} onRemove={this.handleDelete} handleCheck={this.handleCheck}/>\r\n                           {/* <Card key={i} style={{ width: '18rem' }} className='justify-content-center'>\r\n                                 <Card.Body>\r\n                                    <input type='checkbox' onClick={() => this.handleCheck(task._id)} />\r\n                                    <Card.Title>{task.text}</Card.Title>\r\n                                    <Card.Text>\r\n                                        {task.text}\r\n\r\n                                    </Card.Text>\r\n                                    <Button\r\n                                        onClick={() => this.handleDelete(task._id)}\r\n                                        variant='danger'\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faTrash} />\r\n                                    </Button>\r\n                                </Card.Body>\r\n                            </Card> */}\r\n                        })\r\n                    }\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToDo","C:\\Users\\user\\Desktop\\ToDo\\my-app\\src\\idGenerator.js",["34"],"export default function() {\r\n    return Math.random().toString(32).slice(2)\r\n}","C:\\Users\\user\\Desktop\\ToDo\\my-app\\src\\Task.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":3,"column":64,"nodeType":"41","messageId":"42","endLine":3,"endColumn":68},{"ruleId":"43","severity":1,"message":"44","line":115,"column":28,"nodeType":"45","messageId":"46","endLine":130,"endColumn":40},{"ruleId":"47","severity":1,"message":"48","line":115,"column":28,"nodeType":"45","messageId":"49","endLine":130,"endColumn":40},{"ruleId":"50","severity":1,"message":"51","line":1,"column":1,"nodeType":"52","endLine":3,"endColumn":2},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-unreachable","Unreachable code.","unreachableCode","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]